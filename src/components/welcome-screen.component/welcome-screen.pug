h2 Учебный проект песочница "Todorka"

h3 При поддержке костыльно - велосипедной фабрики 


p Учебный проект для демонстрации на позицию junior / стажёр frontend developer 
p (А так же приносящий пользу в виде помидорка-таймера и списка дел/целей)

p Чтобы многое прочувствовать при разработке / обучении практически не использовал js фреймворки

p Что пробовал релизовать и использовать

p Сначала попробовал в "дизайн" и нарисовал заготовку в Figma (как мог ;)
p Потом делал верстку на html всё в одном файле (разбирался с flexbox)
p Верстку переделывал раз 5 или 7 полсностью. 
p И нужно ещё не раз передалть, потому как с версткой много уходит времени
p Получался большой html файл и большой запутанный css файл 
p для иконок подключил fontawesome 
p для шрифтов google fonts

p Далее попробовал PUG 
p (на данный момент не использую все его фишки с программированием и миксинами, а большей частью как разделение на модули)
p Далее попробовал SASS 
p И начал чистить css код с использованием что-то типа "Псевдо-БЭМ" 
p ... стало удобней ориентироваться в файлах

p Узнал про такие крутые штуки как Gulp и Webpack
p Попробовал немного и то и то, выбрал Webpack (больше понравился)
p Разбирался с его настройкой установкой и т.д.
p В результате собрал свой небольшой webpack.config.js для этого проекта (тоже не раз изменялся, после как начал писать на JS)

p Установка node.js использование крутой шутки npm и понеслась ... 

P Начал писать на JS 
p Сначала писал всё функциями и в один файл index.js 
p Дошёл до темы ES6++ и тогда уже стало интересней

p Донастроил webpack с нужными модулями 
P devserver, минификаторы, лоадеры, подключение файлов (html/pug, css/sass), картинок, классная штука Babel (нравится мне это называть бабелем)
p Стало намного удобней заниматься разработкой с помощью webpack

p Начал юзать классы, импорт/экспорт js файлов, деструктуризацию и другие новые фишки
p С такой декомпозицей исходного кода стало ещё удобней

p Но это было пару классов (Файлов js) и они были объемными, и сложно в них разбираться
p Стал придумывать типа своего упрощенного подхода к организации файлов (получилось опять такое "псевдо-компоненты")
p [ name.component ] -> [name.js, name.scss, name.pug, index.js]

p Далее понадобилось использовать СУБД (сначала хотел node.js + mongodb), но решил попробовать firebase (оно попроще и удобней будет на это этапе)
p Опять же сделал внутри проекта что-то  типа "Псевдо-MVC" для работы с базой, CRUD операции
p Разбирался c асинхронностью (мозг немного это выворачивает) (Есть баги у меня в проекте с этим)
p Использую async / await синтакис (знаю что всё построенно это на проммисах, и нужно глубже их понять)
p Для форм доработал простенький и небольшой валидатор

p Проект опять получается типа "Псевдо-SPA"

p пытаюсь использовать git и github (делаю самые базоывае команды типа git add, commit, status, checkout, push)

p Нужно ещё многое допиливать и доделывать задуманные разделы 
p А так же сделать лучше верстку (адаптивность и все дела) 
p Программирование меня уносит полсностью иногда, и на верстку не хватает тямы ...

p Если про фреймворки и библиотеки 
p jQuery ни разу ещё не использовал и нужно ли?
p Попробовал немного самые самые основы React.js 
p Заглядываюсь на Vue.js (ещё не пробовал)
p попробовал немного TypeScript, но пока нужно лучше уметь в обычный JS


ul 
    li HTML5 / CSS3 
    li PUG
    li SASS
    li JavaScript без фреймворков и библиотек (только новый стандарт ES6++ и babel)
    li WebPack + babel
    li "Псевдо БЭМ" + "Псевдо MVC" + "Псевдо Компоненты"


p Хочется попасть на работу/стажеровку, для лучшей прокачки 
p (а не варится уже столько времени в собственном соку) ну и чтобы работать ))